// Задача 8*

/* Техническое задание
Мне нужна новая программа расшифровки.
Есть массив symbols, в котором хранится алфавит (буквы и другие символы).
Есть массив encodedSymbols, в котором хранится зашифрованное сообщение. Каждый элемент этого массива — это индекс символа из массива symbols.
Индексы сдвинуты на величину в переменной shift. Пример: элемент из зашифрованного массива равен единице, значит с учётом сдвига десять это символ с индексом одиннадцать в массиве с алфавитом, то есть «К».
Программа дешифровки должна переводить элементы из массива с шифровкой в символы из массива алфавита и склеивать из них расшифрованную строку. Эту строку храним в переменной decodedMessage.
Если индекс со смещением выходит за пределы алфавита, то нужно вычесть из этого индекса длину алфавита (большие индексы шифруют символы в начале алфавита).
*/

// Алфавит
let symbols = ['А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ё', 'Ж', 'З', 'И', 'Й', 'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У', 'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ъ', 'Ы', 'Ь', 'Э', 'Ю', 'Я', 'а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я', ' ', '.', ',', '—', '!'];

// Смещение
let shift = 10;

// Закодированное сообщение
let encodedSymbols = [8, 28, 36, 52, 56, 40, 23, 31, 56, 39, 38, 28, 48, 52, 58, 56, 38, 27, 32, 37, 56, 40, 23, 31, 56, 39, 38, 41, 39, 32, 57];
// let encodedSymbols =[62,28,31,56,42,40,43,27,23,56,37,28,56,25,51,39,40,38,41,32,48,52,56,40,51,24,34,43,56,43,56,45,38,31,55,32,37,23,57]
// let encodedSymbols =
// [13,25,28,42,38,34,56,37,23,56,39,38,35,56,59,56,39,38,27,38,34,38,37,37,32,34,43,56,35,28,26,47,28,60]
// let encodedSymbols =
// [4,28,31,25,23,37,51,33,56,39,51,35,28,41,38,41,56,45,43,30,28,56,25,28,37,32,34,23,57]
// let encodedSymbols =
// [2,43,47,48,28,56,34,38,42,35,28,42,23,56,25,56,31,43,24,23,45,58,56,47,28,36,56,41,32,37,32,46,23,56,25,56,37,28,24,28,57]

// Раскодированное сообщение
let decodedMessage = '';

function decoded() {
    let array = [];
    let newArray = [];

    // через цикл
    /*
    for (let i = 0; i < encodedSymbols.length; i++) {
        if (encodedSymbols[i] + shift < symbols.length) {
            array.push(encodedSymbols[i] + shift);
        } else {
            array.push(encodedSymbols[i] - symbols.length + shift);
        }
    }
    */

    encodedSymbols.map(function (el) {
        if (el + shift < symbols.length) {
            array.push(el + shift);
        } else {
            array.push(el - symbols.length + shift);
        }
    })

    // через цикл
    /*
    for (let i = 0; i < array.length; i++) {
        newArray.push(symbols.slice(array[i], array[i] + 1));
    }
    */

    array.map(function (el) {
        newArray.push(symbols.slice(el, el + 1));
    })
    
    decodedMessage = newArray.join('');
    return decodedMessage;
}

console.log(decoded())

